name: Build and Deploy to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ctse-microservice-repository
  ECS_CLUSTER: ctse-microservice-cluster
  ECS_SERVICE: ctse-microservice-service
  ECS_TASK_DEFINITION: ecs/ecs-task-def.json
  CONTAINER_NAME: ctse-microservice-container
  MONGO_URI: ${{ secrets.MONGO_URI }}
  ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
  REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push images to ECR
        run: |
          IMAGE_TAG=latest
          ECR_URI=${{ steps.login-ecr.outputs.registry }}

          docker build -t $ECR_URI/$ECR_REPOSITORY-auth:$IMAGE_TAG ./auth-microservice
          docker push $ECR_URI/$ECR_REPOSITORY-auth:$IMAGE_TAG

          docker build -t $ECR_URI/$ECR_REPOSITORY-gateway:$IMAGE_TAG ./api-gateway
          docker push $ECR_URI/$ECR_REPOSITORY-gateway:$IMAGE_TAG

      - name: Render ECS Task Definition with Secrets
        run: |
          cat ecs/ecs-task-def.json | envsubst > ecs/task-def-with-secrets.json

      - name: Render new ECS task definition
        id: render
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs/task-def-with-secrets.json
          container-name: api-gateway
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}-gateway:latest
      - name: Update auth-microservice image
        run: |
          jq '.containerDefinitions |= map(if .name == "auth-microservice" then .image = "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}-auth:latest" else . end)' ecs/task-def-with-secrets.json > ecs/final-task-def.json

      - name: Deploy new task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          task-definition: ${{ steps.render.outputs.task-definition }}
          wait-for-service-stability: true
